/*
* Напишите функцию truncate, которая принимает строку и максимальную длину.

* Если длина строки превышает указанное количество символов, функция должна обрезать строку до этой длины и добавлять в конец многоточие (...).
* В противном случае функция должна возвращать исходную строку.

* Пример работы функции:
* truncate("Вот, что мне действительно нравится в этом", 20) // Ожидаемый результат: "Вот, что мне действи..."
* truncate("Короткая строка", 20) // Ожидаемый результат: "Короткая строка"
*/

function truncate(str, maxLength) {
// Проверяем на пустую строку или недопустимую длину
    if (typeof str !== 'string' || str.length === 0 || maxLength < 1) {
        return '';
    }

    // Если строка не превышает максимальную длину, возвращаем как есть
    if (str.length <= maxLength) {
        return str;
    }

    // Для случаев, когда maxLength ≤ 3, возвращаем соответствующее количество точек
    if (maxLength <= 3) {
        return '.'.repeat(maxLength);
    }

    // Обрезаем строку, оставляя место для многоточия (3 символа)
    return str.slice(0, maxLength - 3) + '...';

  // your code
}

// Тестовые случаи
console.log(truncate("Вот, что мне действительно нравится в этом", 20));
// "Вот, что мне действи..." (ровно 20 символов)

console.log(truncate("Какая-то длинная строка", 10));
// "Какая-то д..." (ровно 10 символов)

console.log(truncate("Короткая строка", 20));
// "Короткая строка" (не обрезается)

console.log(truncate("Точная длина", 12));
// "Точная длина" (не обрезается)

console.log(truncate("", 10));
// "" (пустая строка)

console.log(truncate("Строка", 3));
// "..." (maxLength = 3)

console.log(truncate("Строка", 2));
// ".." (maxLength = 2)
