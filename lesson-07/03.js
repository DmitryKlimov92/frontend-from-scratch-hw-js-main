/*
* Напишите функцию truncate, которая принимает строку и максимальную длину.

* Если длина строки превышает указанное количество символов, функция должна обрезать строку до этой длины и добавлять в конец многоточие (...).
* В противном случае функция должна возвращать исходную строку.

* Пример работы функции:
* truncate("Вот, что мне действительно нравится в этом", 20) // Ожидаемый результат: "Вот, что мне действи..."
* truncate("Короткая строка", 20) // Ожидаемый результат: "Короткая строка"
*/

function truncate(str, maxLength) {
    // Если строка пустая или maxLength меньше 1 - возвращаем пустую строку
    if (!str || maxLength < 1) return '';

    // Если строка короче или равна максимальной длине - возвращаем как есть
    if (str.length <= maxLength) return str;

    // Обрезаем строку до maxLength символов (включая многоточие)
    // Если maxLength ≤ 3 - возвращаем только многоточие соответствующей длины
    if (maxLength <= 3) {
        return '.'.repeat(maxLength);
    }

    // Обрезаем до (maxLength - 3) символов и добавляем 3 точки
    return str.slice(0, maxLength - 3) + '...';
}

// Проверка примеров из тестов
console.log(truncate("Вот, что мне действительно нравится в этом", 20));
// Должно вернуть: "Вот, что мне действи..." (ровно 20 символов)

console.log(truncate("Какая-то длинная строка", 10));
// Должно вернуть: "Какая-то д..." (ровно 10 символов)

console.log(truncate("Короткая строка", 20));
// "Короткая строка" (не обрезается)

console.log(truncate("", 10));
// "" (пустая строка)

console.log(truncate("Точная длина", 12));
// "Точная длина" (ровно maxLength)
